import random
import time
import json
from datetime import datetime

def guess_number():
    print("Добро пожаловать в игру 'Угадай число'!")
    print("Я загадал число от 1 до 100. Попробуй угадать!")
    
    # Загадываем число
    secret_number=random.randint(1, 100)
    attempts=0
    start_time=time.time()
    
    while True:
        try:
            guess=int(input("Введите догадку (1-100): "))
            attempts+=1
            
            if guess<secret_number:
                print('Загаданное число больше')
            elif guess>secret_number:
                print('Загаданное число меньше')
            else:
                end_time=time.time()
                game_time=round(end_time - start_time, 2)
                print(f'Поздравляю! Вы угадали число за {attempts} попыток и {game_time} секунд!')
                return True, attempts, game_time
                
        except ValueError:
            print('Введите целое число от 1 до 100')

def save_statistics(result, attempts, game_time):
    try:
        #Загружаем существующую статистику
        with open('guess_number_stats.json', 'r') as f: #открыть в режиме чтения
            stats = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        #Если нет - создаю новую статистику
        stats = []
    
    #Новая запись
    stats.append({'date': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),'result': 'Победа' if result else 'Поражение',
        'attempts': attempts,
        'time_seconds': game_time})
    
    #Сохраняем обновленную статистику
    with open('guess_number_stats.json', 'w') as f:
        json.dump(stats, f, indent=4, ensure_ascii=False)

def main():
    while True:
        result, attempts, game_time = guess_number()
        save_statistics(result, attempts, game_time)
        
        play_again = input("Хотите сыграть еще раз? (да/нет): ").lower()
        if play_again not in ['да', 'д', 'yes', 'y']:
            print("Спасибо за игру! Статистика сохранена")
            break

if __name__ == "__main__":
    main()

